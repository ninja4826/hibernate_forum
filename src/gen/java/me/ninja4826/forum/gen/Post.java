package me.ninja4826.forum.gen;
// Generated Jan 22, 2016 3:59:57 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Post generated by hbm2java
 */
@Entity
@Table(name = "post", schema = "public")
public class Post implements java.io.Serializable {

	private int id;
	private Post post;
	private Topic topic;
	private User user;
	private String content;
	private int hierarchyLevel;
	private Date createdAt;
	private Date updatedAt;
	private Set<Post> posts = new HashSet<Post>(0);
	private Set<PostAncestor> postAncestorsForAncestorId = new HashSet<PostAncestor>(0);
	private Set<PostAncestor> postAncestorsForPostId = new HashSet<PostAncestor>(0);

	public Post() {
	}

	public Post(int id, Topic topic, User user, String content, int hierarchyLevel, Date createdAt, Date updatedAt) {
		this.id = id;
		this.topic = topic;
		this.user = user;
		this.content = content;
		this.hierarchyLevel = hierarchyLevel;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Post(int id, Post post, Topic topic, User user, String content, int hierarchyLevel, Date createdAt,
			Date updatedAt, Set<Post> posts, Set<PostAncestor> postAncestorsForAncestorId,
			Set<PostAncestor> postAncestorsForPostId) {
		this.id = id;
		this.post = post;
		this.topic = topic;
		this.user = user;
		this.content = content;
		this.hierarchyLevel = hierarchyLevel;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.posts = posts;
		this.postAncestorsForAncestorId = postAncestorsForAncestorId;
		this.postAncestorsForPostId = postAncestorsForPostId;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public Post getPost() {
		return this.post;
	}

	public void setPost(Post post) {
		this.post = post;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "topic_id", nullable = false)
	public Topic getTopic() {
		return this.topic;
	}

	public void setTopic(Topic topic) {
		this.topic = topic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "content", nullable = false)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "hierarchy_level", nullable = false)
	public int getHierarchyLevel() {
		return this.hierarchyLevel;
	}

	public void setHierarchyLevel(int hierarchyLevel) {
		this.hierarchyLevel = hierarchyLevel;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "post")
	public Set<Post> getPosts() {
		return this.posts;
	}

	public void setPosts(Set<Post> posts) {
		this.posts = posts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postByAncestorId")
	public Set<PostAncestor> getPostAncestorsForAncestorId() {
		return this.postAncestorsForAncestorId;
	}

	public void setPostAncestorsForAncestorId(Set<PostAncestor> postAncestorsForAncestorId) {
		this.postAncestorsForAncestorId = postAncestorsForAncestorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "postByPostId")
	public Set<PostAncestor> getPostAncestorsForPostId() {
		return this.postAncestorsForPostId;
	}

	public void setPostAncestorsForPostId(Set<PostAncestor> postAncestorsForPostId) {
		this.postAncestorsForPostId = postAncestorsForPostId;
	}

}
